@inject IJSRuntime js

<input type="checkbox" @bind=MostrarBotones />

<ListadoGenerico Listado="Peliculas">
    <HayRegistros>
        <PeliculaIndividual Pelicula="context" MostrarBotones="MostrarBotones" EliminarPelicula="EliminarPelicula"/>
    </HayRegistros>
</ListadoGenerico>


@code {

    [Parameter] public List<Pelicula> Peliculas { get; set; } // esto es una propiedad (con get y set). Además es pública, con lo cual se puede definir como parámetro con la directiva [Parameter], para poder pasar datos al componente

    protected override void OnInitialized()
    {
        Console.WriteLine("OnInitialized - Cantidad Peliculas: " + Peliculas.Count);
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("OnParametersSet - Cantidad Peliculas: " + Peliculas.Count);
    }

    protected override void OnAfterRender(bool primeraRenderizacion)
    {
        Console.WriteLine("OnAfterRender: Primera vez: " + primeraRenderizacion);
    }

    protected override bool ShouldRender()
    {
        Console.WriteLine("ShouldRender");
        return true;
    }

    bool MostrarBotones = false;  // esto es un campo (sin get ni set)

    async Task EliminarPelicula(Pelicula pelicula)
    {
        var confirmado = await js.Confirm("¿Desea borrar la película " + pelicula.Titulo + "?");
        if (confirmado)
        {
            Peliculas.Remove(pelicula);
            //Las dos siguientes lineas hacen lo mismo, la primera con C# y la segunda con JavaScript:
            Console.WriteLine($"C#: Se ha eliminado una película: {pelicula.Titulo}");
            await js.ConsoleWrite($"Javascript: Se ha borrado la pelicula: {pelicula.Titulo}");
        }
    }
}
